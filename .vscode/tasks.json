{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    // Uses dependsOrder: sequence to make sure depencencies are updated first.
    // Then run docker webpacker, rails, and bash.
    {
      "label": "Docker development",
      "dependsOrder": "sequence",
      "dependsOn": [
        "docker dependencies", // First, update dependencies (Gems, JS packages)
        "docker webpacker and rails server",
      ],
      // Mark as the default build task so cmd/ctrl+shift+b will create them
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": []
      // Uncomment to try to start the task on folder open
      // "runOptions": {
      //   "runOn": "folderOpen"
      // }
    },
    {
      "label": "docker webpacker and rails server",
      "dependsOn": [
        "docker webpacker",
        "docker rails",
        "docker bash"
      ],
      "problemMatcher": []
    },
    {
      "label": "docker dependencies",
      "type": "shell",
      "command": ".dockerdev/docker-start.sh; docker-compose build; docker-compose run --rm bash bundle install && yarn install && rm -f tmp/pids/server.pid && touch tmp/restart.txt",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "docker webpacker",
      "type": "shell",
      "command": "docker-compose up webpacker",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "docker rails",
      "type": "shell",
      "command": "docker-compose up rails",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "docker bash",
      "type": "shell",
      "command": "docker-compose run --rm bash",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Local development",
      "dependsOrder": "sequence",
      "dependsOn": [
        "local dependencies",
        "local webpacker and rails server"
      ],
      // Mark as the default build task so cmd/ctrl+shift+b will create them
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": []
    },
    {
      "label": "local dependencies",
      "type": "shell",
      "command": "bundle install && yarn install && touch tmp/restart.txt",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "local webpacker and rails server",
      "dependsOn": [
        "local webpacker",
        "local rails server"
      ],
      "problemMatcher": []
    },
    {
      "label": "local rails server",
      "type": "shell",
      "command": "rm -f log/development.log && rm -f log/test.log; bundle exec rails s -p 3000 -b lvh.me",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "local webpacker",
      "type": "shell",
      "command": "bin/webpack-dev-server",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "local rails console",
      "type": "shell",
      "command": "bundle exec rails c",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Docker build - development",
      "type": "shell",
      "command": "docker-compose build",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "Docker build - production",
      "type": "shell",
      "command": "export SHA_BUILD_TAG=$(git rev-parse --short HEAD); docker build . -t demoapp:$SHA_BUILD_TAG --secret id=rails_master_key,src=./config/master.key",
      // Or use DATE_BUILD_TAG for debugging production builds locally
      // "command": "export DATE_BUILD_TAG=$(date +%Y%m%d-%H%M%S); docker build . -t demoapp:$DATE_BUILD_TAG --secret id=rails_master_key,src=./config/master.key",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "rubocop auto-correct file",
      "type": "shell",
      "command": "bundle exec rubocop -A ${relativeFile}",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "erblint file",
      "type": "shell",
      "command": "bundle exec erblint ${relativeFile}",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "erblint auto-correct file",
      "type": "shell",
      "command": "bundle exec erblint -a ${relativeFile}",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "prettier auto-correct file",
      "type": "shell",
      "command": "yarn prettier --write ${relativeFile}",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "rubocop generate todo",
      "type": "shell",
      "command": "bundle exec rubocop --auto-gen-config",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always"
      }
    }
  ]
}
