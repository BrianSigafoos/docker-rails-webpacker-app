# Build and deploy to production at subdomain for manual verification currently.
# Uses the kustomize canary overlay via kubernetes/overlays/canary/
name: Release canary

on:
  push:
    tags:
      - release/canary/**

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: prod-app-main
  K8S_ENV: canary
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}
  # HACK: remove
  REPOSITORY_DOWNCASED: briansigafoos/docker-rails-webpacker-app

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # https://github.com/docker/login-action
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/docker/metadata-action
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}
          tags: |
            type=sha,prefix=

      # TODO: replace with short SHA from above output
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          build-args: REVISION=${{ steps.vars.outputs.sha_short }}
          secrets: "rails_master_key=${{ secrets.RAILS_MASTER_KEY }}"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.REPOSITORY_DOWNCASED }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.REPOSITORY_DOWNCASED }}:buildcache,mode=max
          # TODO: switch to type=gha caching once it works/is stable.
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    environment: canary
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.APP_PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.APP_PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Deploy to kubernetes
        uses: ./.github/actions/deploy
        with:
          k8s_env: ${{ env.K8S_ENV }}
          cluster_name: ${{ env.CLUSTER_NAME }}
          image: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ steps.vars.outputs.sha_short }}
